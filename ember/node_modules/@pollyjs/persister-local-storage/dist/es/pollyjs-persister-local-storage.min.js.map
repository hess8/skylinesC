{"version":3,"file":"pollyjs-persister-local-storage.min.js","sources":["../../src/index.js"],"sourcesContent":["import Persister from '@pollyjs/persister';\n\nconst { parse } = JSON;\n\nexport default class LocalStoragePersister extends Persister {\n  static get name() {\n    return 'local-storage';\n  }\n\n  get defaultOptions() {\n    return {\n      key: 'pollyjs',\n      context: global\n    };\n  }\n\n  get localStorage() {\n    const { context } = this.options;\n\n    this.assert(\n      `Could not find \"localStorage\" on the given context \"${context}\".`,\n      context && context.localStorage\n    );\n\n    return context.localStorage;\n  }\n\n  get db() {\n    const items = this.localStorage.getItem(this.options.key);\n\n    return items ? parse(items) : {};\n  }\n\n  set db(db) {\n    this.localStorage.setItem(this.options.key, this.stringify(db));\n  }\n\n  findRecording(recordingId) {\n    return this.db[recordingId] || null;\n  }\n\n  saveRecording(recordingId, data) {\n    const { db } = this;\n\n    db[recordingId] = data;\n    this.db = db;\n  }\n\n  deleteRecording(recordingId) {\n    const { db } = this;\n\n    delete db[recordingId];\n    this.db = db;\n  }\n}\n"],"names":["parse","JSON","Persister","key","context","global","this","options","assert","localStorage","items","getItem","db","setItem","stringify","findRecording","recordingId","saveRecording","data","deleteRecording"],"mappings":"kCAEA,MAAMA,MAAEA,GAAUC,oBAEH,cAAoCC,0BAExC,2CAIA,CACLC,IAAK,UACLC,QAASC,iCAKLD,QAAEA,GAAYE,KAAKC,oBAEpBC,8DACoDJ,MACvDA,GAAWA,EAAQK,cAGdL,EAAQK,4BAITC,EAAQJ,KAAKG,aAAaE,QAAQL,KAAKC,QAAQJ,YAE9CO,EAAQV,EAAMU,GAAS,UAGzBE,QACAH,aAAaI,QAAQP,KAAKC,QAAQJ,IAAKG,KAAKQ,UAAUF,IAG7DG,cAAcC,UACLV,KAAKM,GAAGI,IAAgB,KAGjCC,cAAcD,EAAaE,SACnBN,GAAEA,GAAON,KAEfM,EAAGI,GAAeE,OACbN,GAAKA,EAGZO,gBAAgBH,SACRJ,GAAEA,GAAON,YAERM,EAAGI,QACLJ,GAAKA"}